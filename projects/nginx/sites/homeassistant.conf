# make sure that your homeassistant container is not using a base url

server {
    listen 80;
	listen [::]:80;
	server_name ${HA_DOMAIN};

    access_log /logs/homeassistant-access.log;
    error_log /logs/homeassistant-error.log;

    # Rule for legitimate ACME Challenge requests (like /.well-known/acme-challenge/xxxxxxxxx)
    # We use ^~ here, so that we don't check other regexes (for speed-up). We actually MUST cancel
    # other regex checks when our other config files contain regex rules that deny access to files with dotted names.
    location ^~ /.well-known/acme-challenge/ {
        access_log /logs/homeassistant-acme-challenge.log;

        # Set correct content type. According to this:
        # https://community.letsencrypt.org/t/using-the-webroot-domain-verification-method/1445/29
        # Current specification requires "text/plain" or no content header at all.
        # It seems that "text/plain" is a safe option.
        default_type "text/plain";

        # This directory must be the same as the certbot "webroot-path" parameter.
        root /certbot/webroot;
    }

    # Hide /acme-challenge subdirectory and return 404 on all requests.
    # It is somewhat more secure than letting Nginx return 403.
    # Ending slash is important!
    location = /.well-known/acme-challenge/ {
        return 404;
    }

    # todo 
    # block all other locations
    # only allow own IP's all others fail2ban
}

# server {
#     listen 443 ssl;
#     listen [::]:443 ssl;

#     server_name ${HA_DOMAIN};

#     include /config/nginx/ssl.conf;

#     # Allow lan access if default is set to no
#     if ($allow_list = yes) { 
#         set $allowed_country yes; 
#     } 
#     # Country geo block
#     if ($allowed_country = no) {
#         return 444;
#     }

#     client_max_body_size 0;

#     # enable for ldap auth, fill in ldap details in ldap.conf
#     #include /config/nginx/ldap.conf;

#     # enable for Authelia
#     #include /config/nginx/authelia-server.conf;

#     # Check responses for invalid auth (fail2ban)
#     lua_need_request_body on;
#     set $auth_result "-";
#     body_filter_by_lua '
#         ngx.ctx.buffered = (ngx.ctx.buffered or "") .. ngx.arg[1]
#         if (ngx.arg[2] and ngx.ctx.buffered:find("invalid_auth", 1, true)) then
#             ngx.var.auth_result = "invalid_auth"
#         end
#     ';

#     location / {
#         # enable the next two lines for http auth
#         #auth_basic "Restricted";
#         #auth_basic_user_file /config/nginx/.htpasswd;

#         # enable the next two lines for ldap auth
#         #auth_request /auth;
#         #error_page 401 =200 /ldaplogin;

#         # enable for Authelia
#         #include /config/nginx/authelia-location.conf;

#         include             /config/nginx/proxy.conf;
#         proxy_set_header    Accept-Encoding ""; # required for Lua body filter
#         proxy_pass          http://${SERVER_IPv4}:8123;

#         access_log          /config/log/nginx/homeassistant.log hasslog;
#     }
# }
