# nginx.conf

include /etc/nginx/modules/http_geoip2.conf;
include /etc/nginx/modules/devel_kit.conf;
include /etc/nginx/modules/http_lua.conf;

# Enables the use of JIT for regular expressions to speed-up their processing.
pcre_jit on;


events {
    worker_connections  1024;
}


http {

    ##
    # Basic Settings
    ##

    client_body_buffer_size 128k;
    client_max_body_size 0;
    keepalive_timeout 65;
    large_client_header_buffers 4 16k;
    send_timeout 5m;
    sendfile on;
    tcp_nodelay on;
    tcp_nopush on;
    types_hash_max_size 2048;
    variables_hash_max_size 2048;
    server_tokens off; # Don't reveal Nginx version to clients.
    # server_names_hash_bucket_size 64;
    # server_name_in_redirect off;

    include         /etc/nginx/mime.types;
    default_type    application/octet-stream;

    # Enables or disables the use of underscores in client request header fields.
    # When the use of underscores is disabled, request header fields whose names contain underscores are marked as invalid 
    # and become subject to the ignore_invalid_headers directive.
    # underscores_in_headers off;


    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

        # Log in JSON Format
        # log_format nginxlog_json escape=json '{ "timestamp": "$time_iso8601", '
        # '"remote_addr": "$remote_addr", '
        #  '"body_bytes_sent": $body_bytes_sent, '
        #  '"request_time": $request_time, '
        #  '"response_status": $status, '
        #  '"request": "$request", '
        #  '"request_method": "$request_method", '
        #  '"host": "$host",'
        #  '"upstream_addr": "$upstream_addr",'
        #  '"http_x_forwarded_for": "$http_x_forwarded_for",'
        #  '"http_referrer": "$http_referer", '
        #  '"http_user_agent": "$http_user_agent", '
        #  '"http_version": "$server_protocol", '
        #  '"nginx_access": true }';
        # access_log /dev/stdout nginxlog_json;

    # Should be overridden in each site
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Logformat fail2ban
    log_format fail2ban '$remote_addr $fail2ban_result [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent"';


    ##
    # Gzip Settings
    ##

    gzip on;
    gzip_disable "msie6";

    # gzip_vary on;
    # gzip_proxied any;
    # gzip_comp_level 6;
    # gzip_buffers 16 8k;
    # gzip_http_version 1.1;
    # gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;


    ##
    # WebSocket proxying
    ##

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }


    ##
    # Geo IP settings
    ##
    
    geoip2 /etc/geoip/GeoLite2-City.mmdb {
        $geoip2_data_city_name   city names en;
        $geoip2_data_postal_code postal code;
        $geoip2_data_latitude    location latitude;
        $geoip2_data_longitude   location longitude;
        $geoip2_data_state_name  subdivisions 0 names en;
        $geoip2_data_state_code  subdivisions 0 iso_code;
        $geoip2_data_continent_code   continent code;
        $geoip2_data_country_iso_code country iso_code;
    }

    map $geoip2_data_country_iso_code $allowed_country {
        # default must be yes or no
        # If default is set to "no" you will need to add the local ip ranges that you want to allow access in the $allow_list variable below.
        #default yes;
        default no;

        # Below you will setup country iso_codes with yes or no
        # ex: <country iso_code> <yes/no>;
        NL yes;
    }

    # map $geoip2_data_city_name $allowed_city {
    #     # default must be yes or no
    #     # If default is set to "no" you will need to add the local ip ranges that you want to allow access in the $allow_list variable below.
    #     default yes;

    #     # Below you will setup conditions with yes or no
    #     # ex: <condition> <yes/no>;

    #     # allow Inverness.
    #     #Inverness yes;
    # }

    geo $allow_list_onlyme {
        #default yes; # Set this to no if $allowed_country or $allowed_city default is no. 
        default no;
        #IP/CIDR yes; # e.g. 192.168.1.0/24 yes;
        127.0.0.1 yes;
        ::1 yes;
        ${EXTERNAL_IP_OLD} yes;
        ${EXTERNAL_IP} yes;
        192.168.178.0/24 yes;
        10.0.0.0/8 yes;
    }

    geo $allow_list_homeassistant {
        #default yes; # Set this to no if $allowed_country or $allowed_city default is no. 
        default no;
        #IP/CIDR yes; # e.g. 192.168.1.0/24 yes;
        ${EXTERNAL_IP_OLD} yes;
        ${EXTERNAL_IP} yes;
        192.168.178.0/24 yes;
        10.0.0.0/8 yes;
        52.210.253.108 yes; # Toon
        52.48.198.78 yes; # Toon
        52.49.253.220 yes; # Toon
    }

    # Server config example:
    # Add the following if statements inside any server context where you want to geo block countries.

    ########################################
    #   if ($allow_list = yes) {
    #   set $allowed_country yes;
    #   }
    #	if ($allowed_country = no) {
    #	return 444;
    #	}
    #########################################

    # Add the following if statements inside any server context where you want to geo block cities.
    ########################################
    #   if ($allow_list = yes) {
    #   set $allowed_country yes;
    #   }
    #	if ($allowed_city = no) {
    #	return 444;
    #	}
    #########################################


    include /etc/nginx/servers/default.conf;
    include /etc/nginx/servers/homeassistant.conf;
}
