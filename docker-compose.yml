version: "3"
services:
  pihole:
    container_name: pihole
    image: pihole/pihole:v5.1.2
    depends_on:
      - cloudflared
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - ServerIP=${SERVER_IPv4}
      - ServerIPv6=${SERVER_IPv6}
      - WEB_PORT=8080
      - WEBTHEME='default-dark'
      - WEBUIBOXEDLAYOUT='traditional'
      - WEBPASSWORD=${PIHOLE_PASSWORD}
      - DNSMASQ_LISTENING=all
      - DNS1='${SERVER_IPv4}#5054'
      - DNS2=''
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${CONFIGS}/pihole/pihole:/etc/pihole
      - ${CONFIGS}/pihole/dnsmasq.d:/etc/dnsmasq.d
    network_mode: host
    dns:
      - 127.0.0.1
      - 1.1.1.1
    cap_add:
      - NET_ADMIN
    ports:
      - 53:53
      - 443:443
      - 8080:8080
  cloudflared:
    container_name: cloudflared
    image: visibilityspots/cloudflared:latest
    restart: unless-stopped
    environment:
      - TZ=${TZ}
      - DNS1='1.1.1.1'
      - DNS2='1.0.0.1'
      - PORT=5054
    network_mode: host
    ports:
      - 5054:5054
  homeassistant:
    container_name: homeassistant
    image: homeassistant/home-assistant:${HA_VERSION}
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    network_mode: host
    ports:
      - 8123:8123
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${CONFIGS}/homeassistant:/config
  deluge:
    container_name: deluge
    image: linuxserver/deluge:latest
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${DOWNLOADS}:/downloads # downloads folder
      - ${CONFIGS}/deluge:/config # config files
    network_mode: host
    ports:
      - 8112:8112
    healthcheck:
      test:
        - "CMD"
        - "curl"
        - "-f"
        - "http://localhost:8112/"
      interval: 30s
      timeout: 10s
  jackett:
    container_name: jackett
    image: linuxserver/jackett:latest
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DOWNLOADS}/torrents:/torrents # place where to put .torrent files for manual download
      - ${CONFIGS}:/config # config files (Jackett is appended)
    network_mode: host
    ports:
      - 9117:9117
    healthcheck:
      test:
        - "CMD"
        - "curl"
        - "-f"
        - "http://localhost:9117/"
      interval: 30s
      timeout: 10s
  sonarr:
    container_name: sonarr
    image: linuxserver/sonarr:latest
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${CONFIGS}/sonarr:/config # config files
      - ${MEDIA}/Series:/series # tv shows folder
      - ${DOWNLOADS}:/downloads # download folder
    network_mode: host
    ports:
      - 8989:8989
    healthcheck:
      test:
        - "CMD"
        - "curl"
        - "-f"
        - "http://localhost:8989/"
      interval: 30s
      timeout: 10s
  radarr:
    container_name: radarr
    image: linuxserver/radarr:latest
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${CONFIGS}/radarr:/config # config files
      - ${MEDIA}/Movies:/movies # movies folder
      - ${DOWNLOADS}:/downloads # download folder
    network_mode: host
    ports:
      - 7878:7878
    healthcheck:
      test:
        - "CMD"
        - "curl"
        - "-f"
        - "http://localhost:7878/"
      interval: 30s
      timeout: 10s
  bazarr:
    container_name: bazarr
    image: linuxserver/bazarr
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIGS}/bazarr:/config # config files
      - ${MEDIA}/Movies:/movies # movies folder
      - ${MEDIA}/Series:/series # tv shows folder
    network_mode: host
    ports:
      - 6767:6767
    healthcheck:
      test:
        - "CMD"
        - "curl"
        - "-f"
        - "http://localhost:6767/"
      interval: 30s
      timeout: 10s
